# Server Configuration
server.port=8080

# Elasticsearch Configuration
spring.elasticsearch.rest.uris=${SPRING_ELASTICSEARCH_REST_URIS:http://localhost:9200}
spring.elasticsearch.rest.connection-timeout=1s
spring.elasticsearch.rest.read-timeout=1m
spring.elasticsearch.rest.username=${SPRING_ELASTICSEARCH_REST_USERNAME:}
spring.elasticsearch.rest.password=${SPRING_ELASTICSEARCH_REST_PASSWORD:}

# Kafka Configuration
spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
spring.kafka.consumer.group-id=${SPRING_KAFKA_CONSUMER_GROUP_ID:product-group}
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.example.demo.model
spring.kafka.consumer.properties.spring.json.value.default.type=com.example.demo.model.Product

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=product:com.example.demo.model.Product

# Kafka Topics
kafka.topic.product=${KAFKA_TOPIC_PRODUCT:product-topic}

# Application Info
spring.application.name=kafka-elasticsearch-demo
info.app.name=${spring.application.name}
info.app.description=Spring Boot CRUD with Kafka and Elasticsearch
info.app.version=1.0.0

# Actuator
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always

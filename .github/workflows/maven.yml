name: Java CI with Maven and Docker

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.17.9
        env:
          discovery.type: single-node
          ES_JAVA_OPTS: -Xms512m -Xmx512m
        ports:
          - 9200:9200
        options: >-
          --health-cmd="curl -s http://localhost:9200/_cluster/health | grep -q 'status.*green\|status.*yellow'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    
    - name: Run Tests
      run: mvn test
    
    - name: Run Integration Tests
      run: mvn verify -DskipUnitTests
    
    - name: Upload Test Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: target/surefire-reports/
    
    - name: Upload Integration Test Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: integration-test-results
        path: target/failsafe-reports/
    
    - name: Upload Build Artifact
      uses: actions/upload-artifact@v4
      with:
        name: application-jar
        path: target/*.jar
        
  docker:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: application-jar
        path: target/
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ghcr.io/${{ github.repository_owner }}/kafka-elasticsearch-demo:latest
          ghcr.io/${{ github.repository_owner }}/kafka-elasticsearch-demo:${{ github.sha }}
    
  deploy:
    needs: docker
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Test Docker Compose
      run: |
        docker-compose -f docker-compose.yml config
        
    - name: Create Docker Compose artifact
      uses: actions/upload-artifact@v4
      with:
        name: docker-compose
        path: |
          docker-compose.yml
          Dockerfile
